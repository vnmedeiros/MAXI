# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

# def configure(conf):
#     conf.check_nonfatal(header_name='stdint.h', define_name='HAVE_STDINT_H')

def build(bld):
    module = bld.create_ns3_module('lab', ['mobility','internet','network','core'])
    module.source = [
        'model/lab.cc',        
        'helper/lab-helper.cc',        
        'helper/my-mobility-helper.cc',
        'model/RandomRectanglePositionAllocatorMinMax.cc',
        'model/WifiPhy/spectrum-wifi-phy-custom.cc',
        'model/WifiPhy/wifi-spectrum-phy-custom-interface.cc',
        'helper/spectrum-wifi-custom-helper.cc',
        'model/info-tag.cc',
        'model/application/labora-application.cc',
        'helper/labora-application-helper.cc',
        'model/routing-header.cc',
        'model/element/flow.cc',
        'model/element/edge.cc',
        'model/element/graph.cc',
        'model/utils/dijkstra.cc',
        'model/algorithm/laboraRouting.cc',
        'model/algorithm/LBR.cc',
        'model/algorithm/CRAA.cc',
        'model/algorithm/BPR.cc',        
        'model/algorithm/LBRJrcar.cc',
        'helper/ipv4-joint-routing-helper.cc',
        #'model/ipv4-joint-routing.cc',
        'model/joint-routing.cc',
        'model/algorithm/RALL.cc',        
        ]

    module_test = bld.create_ns3_module_test_library('lab')
    module_test.source = [
        'test/lab-test-suite.cc',
        ]

    headers = bld(features='ns3header')
    headers.module = 'lab'
    headers.source = [
        'model/lab.h',        
        'helper/lab-helper.h',                
        'helper/my-mobility-helper.h',
        'model/RandomRectanglePositionAllocatorMinMax.h',
        'model/WifiPhy/spectrum-wifi-phy-custom.h',
        'model/WifiPhy/wifi-spectrum-phy-custom-interface.h',
        'helper/spectrum-wifi-custom-helper.h',
        'model/info-tag.h',
        'model/application/labora-application.h',
        'helper/labora-application-helper.h',
        'model/routing-header.h',
        'model/element/flow.h',
        'model/element/edge.h',
        'model/element/graph.h',        
        'model/utils/dijkstra.h',
        'model/algorithm/laboraRouting.h',
        'model/algorithm/LBR.h',
        'model/algorithm/CRAA.h',
        'model/algorithm/BPR.h',        
        'model/algorithm/LBRJrcar.h',
        'helper/ipv4-joint-routing-helper.h',
        #'model/ipv4-joint-routing.h',
        'model/joint-routing.h',
        'model/algorithm/RALL.h',               
        ]

    if bld.env.ENABLE_EXAMPLES:
        bld.recurse('examples')

    # bld.ns3_python_bindings()

